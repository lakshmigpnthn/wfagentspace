{
  "provider": "googlevertexai",
  "errors": null,
  "status": "ProblemDetected",
  "problems": 7,
  "results": [
    {
      "kind": "Deployment",
      "name": "default/mortgagelending",
      "error": [
        {
          "Text": "Deployment default/mortgagelending has 1 replicas but 2 are available",
          "KubernetesDoc": "",
          "Sensitive": [
            {
              "Unmasked": "default",
              "Masked": "TUdyTUMjUw=="
            },
            {
              "Unmasked": "mortgagelending",
              "Masked": "S1ZvYm1UOzN9aG1kL3Zf"
            }
          ]
        }
      ],
      "details": "Error: The Deployment named \"mortgagelending\" in the \"default\" namespace has 1 replica running, but 2 replicas are available.\n\nSolution:\n1. Check if there are any pods in a Pending or Failed state.\n2. If there are, investigate the reason for their failure and resolve it.\n3. If there are no failed pods, scale the Deployment to the desired number of replicas.\n",
      "parentObject": ""
    },
    {
      "kind": "Deployment",
      "name": "default/safeagent",
      "error": [
        {
          "Text": "Deployment default/safeagent has 1 replicas but 2 are available",
          "KubernetesDoc": "",
          "Sensitive": [
            {
              "Unmasked": "default",
              "Masked": "O1dxZkFPXw=="
            },
            {
              "Unmasked": "safeagent",
              "Masked": "UCF0TSN2RTNK"
            }
          ]
        }
      ],
      "details": "Error: The Deployment `default/safeagent` has 2 replicas available but only 1 is scheduled.\n\nSolution:\n1. Check if the Pod is in a Pending state.\n2. If the Pod is Pending, check the events for the Pod to see if there are any errors.\n3. If there are no errors, try scaling the Deployment to 2 replicas.\n",
      "parentObject": ""
    },
    {
      "kind": "ReplicaSet",
      "name": "default/swift-56f784d4dd",
      "error": [
        {
          "Text": "pods \"swift-56f784d4dd-\" is forbidden: error looking up service account default/swif: serviceaccount \"swif\" not found",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The service account \"swif\" used by the pod \"swift-56f784d4dd-\" is not found.\nSolution: Create the service account \"swif\" using the command:\n```\nkubectl create serviceaccount swif\n```\n",
      "parentObject": "Deployment/swift"
    },
    {
      "kind": "Pod",
      "name": "default/mortgagelending-587f8886c4-gdz8f",
      "error": [
        {
          "Text": "0/4 nodes are available: 2 Insufficient memory, 3 Insufficient cpu. preemption: 0/4 nodes are available: 4 No preemption victims found for incoming pod.",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: Insufficient resources (memory and CPU) to schedule new pods. No available nodes for preemption.\n\nSolution:\n1. Increase cluster capacity by adding more nodes.\n2. Check if any existing pods can be scaled down or terminated to free up resources.\n3. Enable preemption to allow eviction of lower-priority pods for higher-priority ones.\n",
      "parentObject": "Deployment/mortgagelending"
    },
    {
      "kind": "Pod",
      "name": "default/safeagent-7776c8bf7d-2qc6k",
      "error": [
        {
          "Text": "Back-off pulling image \"us-central1-docker.pkg.dev/google-samples/microservices-demo/adservic:v0.10.2\": ErrImagePull: rpc error: code = NotFound desc = failed to pull and unpack image \"us-central1-docker.pkg.dev/google-samples/microservices-demo/adservic:v0.10.2\": failed to resolve reference \"us-central1-docker.pkg.dev/google-samples/microservices-demo/adservic:v0.10.2\": us-central1-docker.pkg.dev/google-samples/microservices-demo/adservic:v0.10.2: not found",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The image \"us-central1-docker.pkg.dev/google-samples/microservices-demo/adservic:v0.10.2\" is not found on the specified registry.\nSolution: Make sure the image exists on the specified registry:\n1. Check if the image is available in the specified registry.\n2. If the image is not available, build and push the image to the specified registry.\n",
      "parentObject": "Deployment/safeagent"
    },
    {
      "kind": "Pod",
      "name": "default/welcredit-7cc8f467cc-f4p48",
      "error": [
        {
          "Text": "0/4 nodes are available: 3 Insufficient memory, 4 Insufficient cpu. preemption: 0/4 nodes are available: 4 No preemption victims found for incoming pod.",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: Insufficient resources (memory and CPU) to schedule the pod. No nodes can be preempted to make room for the pod.\nSolution: \n- Increase the resources requested by the pod.\n- Increase the capacity of the cluster by adding more nodes or increasing the resources on existing nodes.\n- Enable preemption to allow the system to evict pods from nodes to make room for higher priority pods.\n",
      "parentObject": "Deployment/welcredit"
    },
    {
      "kind": "Service",
      "name": "default/safeagent",
      "error": [
        {
          "Text": "Service has not ready endpoints, pods: [Pod/safeagent-7776c8bf7d-2qc6k], expected 1",
          "KubernetesDoc": "",
          "Sensitive": []
        }
      ],
      "details": "Error: The service is not ready because the pod 'safeagent-7776c8bf7d-2qc6k' is not ready.\n\nSolution: \n1. Check the status of the pod using `kubectl get pods safeagent-7776c8bf7d-2qc6k`.\n2. If the pod is not running, start it using `kubectl rollout restart deployment safeagent`.\n3. If the pod is running, check the logs using `kubectl logs safeagent-7776c8bf7d-2qc6k` to identify any issues.\n",
      "parentObject": ""
    }
  ]
}
